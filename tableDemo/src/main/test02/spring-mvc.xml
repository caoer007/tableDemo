<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 配置注解扫描路径 -->
    <context:component-scan base-package="com.cc.ccspace"></context:component-scan>
<!--配置自定义的bean-->
    <bean id="testService" class="com.cc.ccspace.service.test.TestServiceImpl"></bean>
    <!-- 配置注解驱动 -->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!--上传文件相关配置  最大大小、缓存大小、 临时目录-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="102400000" />
        <property name="resolveLazily" value="true"/>
        <property name="maxInMemorySize" value="4096"/>
        <property name="uploadTempDir" value="fileUpload/temp"/>
    </bean>
    <!--对模型视图名称的解析，即在模型视图名称添加前后缀 优先级最低的解析器-->
    <!-- 如果使用jstl的话，配置下面的属性 支撑ModelAndView -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>

    <!-- bean视图解析器 优先级高于InternalResourceViewResolver-->
    <!--jackson-->
  <!--  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>-->
    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
   <!-- <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=utf-8</value>
            </list>
        </property>
    </bean>-->
    <bean id="propertyConfigurer" class="com.cc.ccspace.common.property.PropertyHolder">
        <!--
        <property name="ignoreResourceNotFound" value="true" />
        -->
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>
   <!-- <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            &lt;!&ndash; 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller&ndash;&gt;
            &lt;!&ndash;示例
            <mvc:mapping path="/user/**" />
            <mvc:mapping path="/login/**" />&ndash;&gt;
            <bean class="com.cc.ccspace.common.interceptor.MvcInterceptor"></bean>
        </mvc:interceptor>
        &lt;!&ndash;当设置多个拦截器时，先按顺序调用preHandle方法，
            然后逆序调用每个拦截器的postHandle和afterCompletion方法&ndash;&gt;
    </mvc:interceptors>-->


</beans>